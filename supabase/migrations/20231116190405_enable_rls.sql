drop index if exists "public"."index_tools_on_cloned_from_id";

drop index if exists "public"."index_tools_on_user_id";

alter table "public"."tools" alter column "created_at" set default now();

alter table "public"."tools" alter column "details" drop not null;

alter table "public"."tools" alter column "id" drop default;

alter table "public"."tools" alter column "id" add generated by default as identity;

alter table "public"."tools" alter column "system_prompt" drop not null;

alter table "public"."tools" alter column "system_prompt" set data type character varying using "system_prompt"::character varying;

alter table "public"."tools" alter column "title" drop not null;

alter table "public"."tools" alter column "title" set data type character varying using "title"::character varying;

alter table "public"."tools" alter column "tool_status" drop default;

alter table "public"."tools" alter column "tool_status" drop not null;

alter table "public"."tools" alter column "tool_type" drop default;

alter table "public"."tools" alter column "tool_type" drop not null;

alter table "public"."tools" alter column "updated_at" set default (now() AT TIME ZONE 'utc'::text);

alter table "public"."tools" alter column "updated_at" drop not null;

alter table "public"."tools" alter column "user_id" drop not null;

alter table "public"."tools" enable row level security;

drop sequence if exists "public"."tools_id_seq";

create policy "Enable CRUD for users based on user_id"
on "public"."tools"
as permissive
for all
to public
using ((auth.uid() = user_id));


create policy "Enable read tool for all users "
on "public"."tools"
as permissive
for select
to anon, authenticated
using (true);




